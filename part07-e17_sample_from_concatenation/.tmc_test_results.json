[{"name": "test.test_sample_from_concatenation.TestSampleFromConcatenation.test_deterministic", "status": "passed", "message": "", "passed": true, "points": ["p07-17.1"], "backtrace": []}, {"name": "test.test_sample_from_concatenation.TestSampleFromConcatenation.test_length_one", "status": "passed", "message": "", "passed": true, "points": ["p07-17.1"], "backtrace": []}, {"name": "test.test_sample_from_concatenation.TestSampleFromConcatenation.test_second", "status": "failed", "message": "3 != 2", "passed": false, "points": ["p07-17.1"], "backtrace": ["  File \"/anaconda3/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"/anaconda3/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n", "  File \"/Users/satu/Kurssit/hy-data-analysis-with-python-spring-2019/part07-e17_sample_from_concatenation/test/test_sample_from_concatenation.py\", line 55, in test_second\n    self.assertEqual(len(s2), n)\n", "  File \"/anaconda3/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"/anaconda3/lib/python3.6/unittest/case.py\", line 822, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}]